#!/bin/sh

set -e

TARGET=$1

realpath() {
    echo $(cd $@ && pwd -P)
}

if [ -z $TARGET ]; then
    echo "Error: target path is required"
    echo "Usage: $0 [target path]"
    exit 1
fi
TARGET=$(realpath $TARGET)

# /mnt/vda1/unison/Users/typester/dev/src/scratch/docker-unison-sync/
SYNC_POINT=/mnt/vda1/unison

# extract docker host
DOCKER_IP=""
if [ -z $DOCKER_HOST ]; then
    echo "DOCKER_HOST isn't set"
    exit 1
else 
    DOCKER_IP=$(echo $DOCKER_HOST | sed -e 's/^tcp:\/\///' | sed -e 's/:.*//')
fi

if [ -z $DOCKER_IP ]; then
    echo "failed to extract docker host ip"
    exit 1
fi

# start or restart unison-sync continer
UNISON_CID=$(docker ps -a --filter "name=unison-sync" --format="{{.ID}}")
UNISON_NOT_STARTED=""
if [ -z $UNISON_CID ]; then
    echo "* Starting unison-sync container *"
    UNISON_CID=$(docker run -d -v $SYNC_POINT:/unison -p 15000:5000 -e UNISON_VERSION=2.48.3 --name unison-sync leighmcculloch/unison)
    UNISON_NOT_STARTED="true"
else
    UNISON_STATUS=$(docker ps -a --filter "name=unison-sync" --format="{{.Status}}" | cut -d ' ' -f 1)
    if [[ $UNISON_STATUS != "Up" ]]; then
        echo "* Restarting unison-sync container *"
        docker restart $UNISON_CID
        UNISON_NOT_STARTED="true"
    fi
fi

# clean up directory
docker exec unison-sync rm -rf /unison$TARGET

if [[ $UNISON_NOT_STARTED == "true" ]]; then
    docker stop $UNISON_CID
fi
